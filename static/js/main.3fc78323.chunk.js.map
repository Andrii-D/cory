{"version":3,"sources":["Screen.js","App.js","registerServiceWorker.js","index.js"],"names":["Smartphone","styled","div","_templateObject","props","width","height","SmartphoneContent","_templateObject2","StyledIframe","iframe","_templateObject3","Screen","scale","this","scaledWidth","item","scaledHeight","react_default","a","createElement","sandbox","seamless","src","title","device","Component","defaultProps","os","SCREENS","LANGUAGES","ScreenItem","_ref","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","screens","languages","_this2","className","icon","iconSize","Grid_default","container","spacing","xs","slider","min","max","labelStepSize","onChange","value","setState","class","type","placeholder","dir","Multiselect_default","data","textField","valueField","defaultValue","groupBy","itemComponent","map","screen","key","language","replace","src_Screen","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.3fc78323.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport styled from 'styled-components'\n\nconst Smartphone = styled.div`\n    position: relative;\n    width: ${props => props.width || '360px'};\n    height: ${props => props.height || '640px'};\n    margin: auto;\n    border: 16px black solid;\n    border-top-width: 60px;\n    border-bottom-width: 60px;\n    border-radius: 36px;\n    ::before {\n        content: '';\n        display: block;\n        width: 60px;\n        height: 5px;\n        position: absolute;\n        top: -30px;\n        left: 50%;\n        transform: translate(-50%, -50%);\n        background: #333;\n        border-radius: 10px;\n    } \n    ::after {\n        content: '';\n        display: block;\n        width: 35px;\n        height: 35px;\n        position: absolute;\n        left: 50%;\n        bottom: -65px;\n        transform: translate(-50%, -50%);\n        background: #333;\n        border-radius: 50%;\n    }\n`;\n\nconst SmartphoneContent = styled.div`\n    width: 100%;\n    height: 100%;\n    background: white;\n`;\n\nconst StyledIframe = styled.iframe`\n    width:100%;\n    height:100%;\n    border:none;\n    overflow: auto;\n`;\n\nclass Screen extends Component {\n    render() {\n        let scale = this.props.scale/100;\n        let scaledWidth = (this.props.item.width * scale + 32) + 'px';\n        let scaledHeight = (this.props.item.height * scale + 120) + 'px';\n        return (\n            <Smartphone width={scaledWidth} height={scaledHeight}>\n                <SmartphoneContent>\n                    <StyledIframe sandbox=\"allow-same-origin allow-forms allow-scripts\" \n                            seamless=\"\" \n                            src={this.props.src} \n                            title={this.props.item.device}>\n                    </StyledIframe>\n                </SmartphoneContent>\n            </Smartphone>\n        );\n    }\n}\nScreen.defaultProps = {\n    src: \"http://example.com\",\n    item: {device: 'iPhone 7', os: 'iOS', width: 750, height: 1334}\n}\n\nexport default Screen;","import React, { Component } from 'react';\nimport './App.css';\nimport { Icon, Slider } from \"@blueprintjs/core\";\nimport 'react-widgets/dist/css/react-widgets.css';\nimport Multiselect from 'react-widgets/lib/Multiselect'\n// import { Button, Card, Elevation } from \"@blueprintjs/core\";\nimport Grid from '@material-ui/core/Grid';\nimport Screen from './Screen'\n\n// Useful:\n// https://jquense.github.io/react-widgets/api/Multiselect/\n// https://blueprintjs.com/docs/#core\n// https://dev.to/tylermcginnis/a-comprehensive-guide-to-reactjs-in-2018--4nbc\n\nconst SCREENS = [\n  {device: 'iPhone 7', os: 'iOS', width: 750, height: 1334},\n  {device: 'iPhone 7+', os: 'iOS', width: 1080, height: 1920},\n  {device: 'Samsung Galaxy S6', os: 'Android', width: 1440, height: 2560}\n]\nconst LANGUAGES = ['en', 'ua', 'ru', 'es', 'pl', 'fr']\n\nlet ScreenItem = ({ item }) => (\n  <span>\n    <strong>{item.device}</strong>\n    {\" \" + item.width + \"x\" + item.height}\n  </span>\n);\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      scale: 50,\n      screens: [SCREENS[0], SCREENS[1]],\n      languages: [LANGUAGES[0], LANGUAGES[1]],\n      src: \"http://www.bbc.com\"\n    };\n\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n        <Icon icon=\"projects\" iconSize={60} />\n          <h1 className=\"App-title\">Welcome to Cory</h1>\n        </header>\n        <br></br>\n        <Grid container spacing={24}>\n          <Grid item xs={2}>\n            <Slider\n              min={0}\n              max={100}\n              labelStepSize={25}\n              onChange={value => this.setState({ scale: value })}\n              value={this.state.scale}\n            />\n          </Grid>\n          <Grid item xs={3}>\n          <input class=\"bp3-input bp3-large bp3-fill .modifier\" type=\"text\" placeholder=\"Text input\" dir=\"auto\" />\n          </Grid>\n          <Grid item xs>\n            <Multiselect\n              data={SCREENS}\n              textField='device'\n              valueField='width'\n              defaultValue={this.state.screens}\n              groupBy='os'\n              itemComponent={ScreenItem}\n              onChange={value => this.setState({ screens: value })}\n            />\n          </Grid>\n          <Grid item xs={2}>\n            <Multiselect\n              data={LANGUAGES}\n              defaultValue={this.state.languages}\n              onChange={value => this.setState({ languages: value })}\n            />\n          </Grid>\n        </Grid>\n\n        <br/>\n        {this.state.screens.map((screen) => {\n          return (\n            <Grid container spacing={24} key={screen.device}>\n              {this.state.languages.map((language) => {\n                let src = this.state.src.replace('/en/', '/'+language+'/')\n                return (\n                  <Grid item xs key={language}>    \n                    <Screen item={screen} scale={this.state.scale} src={src} /> \n                  </Grid>\n                )\n              })}\n            </Grid>\n          )\n        })}  \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}